// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/AnyoneClown/anydb/config"

func DBConfigView(configs []config.DBConfig) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><script src=\"https://unpkg.com/htmx.org@1.9.10\" integrity=\"sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC\" crossorigin=\"anonymous\"></script><script src=\"https://cdn.tailwindcss.com\"></script><script src=\"https://unpkg.com/htmx.org/dist/ext/json-enc.js\"></script><title>DB Configurations</title><style>\n            @keyframes fadeIn {\n                from { opacity: 0; transform: translateY(10px); }\n                to { opacity: 1; transform: translateY(0); }\n            }\n            \n            .animate-fade-in {\n                animation: fadeIn 0.3s ease-out forwards;\n            }\n            \n            tr.htmx-swapping td {\n                opacity: 0;\n                transition: opacity 0.3s ease-out;\n            }\n            \n            .input-focus-effect:focus {\n                box-shadow: 0 0 0 2px rgba(34, 197, 94, 0.2);\n                border-color: rgb(34, 197, 94);\n            }\n            \n            .gradient-background {\n                background: linear-gradient(135deg, rgb(17, 24, 39) 0%, rgb(75, 85, 99) 100%);\n            }\n\n            /* Стилі для скролбару */\n            .custom-scrollbar::-webkit-scrollbar {\n                height: 8px;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-track {\n                background: rgba(75, 85, 99, 0.1);\n                border-radius: 4px;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-thumb {\n                background: rgba(75, 85, 99, 0.5);\n                border-radius: 4px;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n                background: rgba(75, 85, 99, 0.7);\n            }\n        </style></head><body class=\"gradient-background min-h-screen\"><div class=\"min-h-screen flex flex-col items-center justify-start py-6 px-2 sm:px-4 lg:px-6\"><div class=\"bg-gray-800 shadow-2xl rounded-xl p-4 sm:p-6 w-full max-w-[98%] border border-gray-700\"><div class=\"space-y-2 mb-6\"><h1 class=\"text-2xl sm:text-3xl font-bold bg-gradient-to-r from-green-400 to-emerald-500 bg-clip-text text-transparent\">DB Configurations</h1><p class=\"text-gray-400\">Manage your database configurations securely in one place</p></div><form class=\"space-y-4 mb-6\" hx-post=\"/api/configs\" hx-target=\"#configTable\" hx-swap=\"outerHTML\" hx-ext=\"json-enc\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\"><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"configName\">Config Name</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"configName\" placeholder=\"Enter config name\" name=\"configName\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"driver\">Driver</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"driver\" placeholder=\"postgres or cockroachdb\" name=\"driver\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"host\">Host</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"host\" placeholder=\"Enter host\" name=\"host\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"port\">Port</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"port\" placeholder=\"Enter port\" name=\"port\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"user\">User</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"user\" placeholder=\"Enter user\" name=\"user\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"password\">Password</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" type=\"password\" id=\"password\" placeholder=\"Enter password\" name=\"password\" required></div><div class=\"space-y-1\"><label class=\"block text-sm font-medium text-gray-300\" for=\"database\">Database</label> <input class=\"w-full px-3 py-2 rounded-lg bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 input-focus-effect transition-all duration-200\" id=\"database\" placeholder=\"Enter database\" name=\"database\" required></div></div><button class=\"w-full sm:w-auto px-6 py-2 rounded-lg bg-gradient-to-r from-green-500 to-emerald-600 text-white font-medium hover:from-green-600 hover:to-emerald-700 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5\" type=\"submit\">Add Configuration</button></form><div class=\"overflow-x-auto custom-scrollbar rounded-xl shadow-xl border border-gray-700\"><div id=\"configTable\" class=\"min-w-full\"><table class=\"min-w-full\"><thead class=\"bg-gray-900\"><tr><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Config Name</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Driver</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Host</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Port</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">User</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Database</th><th scope=\"col\" class=\"px-4 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider whitespace-nowrap\">Actions</th></tr></thead> <tbody class=\"bg-gray-800 divide-y divide-gray-700\" id=\"configRows\"></tbody></table></div></div></div></div><script>\n            document.addEventListener('DOMContentLoaded', function() {\n                loadConfigs();\n                setInterval(loadConfigs, 30000);\n            });\n\n            function loadConfigs() {\n                fetch('/api/configs')\n                    .then(response => response.json())\n                    .then(data => {\n                        const tbody = document.getElementById('configRows');\n                        tbody.innerHTML = '';\n\n                        data.data.forEach((config, index) => {\n                            const tr = document.createElement('tr');\n                            tr.className = 'hover:bg-gray-700 transition-colors animate-fade-in';\n                            tr.style.animationDelay = `${index * 50}ms`;\n                            \n                            tr.innerHTML = `\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.ConfigName}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.Driver}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.Host}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.Port}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.User}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    ${config.Database}\n                                </td>\n                                <td class=\"px-4 py-3 whitespace-nowrap text-sm text-gray-300\">\n                                    <button \n                                        onclick=\"deleteConfig('${config.ID}')\"\n                                        class=\"text-red-400 hover:text-red-300 transition-colors px-3 py-1 rounded-md hover:bg-red-500/10\"\n                                    >\n                                        Delete\n                                    </button>\n                                </td>\n                            `;\n                            \n                            tbody.appendChild(tr);\n                        });\n                    })\n                    .catch(error => console.error('Error loading configs:', error));\n            }\n\n            function deleteConfig(id) {\n                if (confirm('Are you sure you want to delete this configuration?')) {\n                    fetch(`/api/configs/${id}`, {\n                        method: 'DELETE'\n                    })\n                    .then(response => {\n                        if (response.ok) {\n                            loadConfigs();\n                        } else {\n                            alert('Error deleting configuration');\n                        }\n                    })\n                    .catch(error => console.error('Error:', error));\n                }\n            }\n        </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
