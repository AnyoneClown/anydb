version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: AA6tgixbKoCkb61S0cUtuA
      POSTGRES_DB: CocaCallsAPI
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - ./elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.3
    container_name: filebeat
    user: root
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./elk/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: filebeat -e -strict.perms=false

  anydb:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: anydb
    ports:
      - "8080:8080"
    volumes:
      - anydb_logs:/root/.anydb
    depends_on:
      - postgres
      - elasticsearch

volumes:
  postgres_data:
  es_data:
  anydb_logs:  # Added new volume